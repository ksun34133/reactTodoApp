{"version":3,"sources":["components/classBased/TodoItem.module.css","components/functionBased/Header.js","components/functionBased/Navbar.js","components/classBased/InputTodo.js","components/classBased/TodoItem.js","components/classBased/TodoList.js","components/functionBased/pages/SinglePage.js","components/functionBased/pages/About.js","components/functionBased/pages/NotMatch.js","components/classBased/TodoContainer.js","reportWebVitals.js","index.js"],"names":["module","exports","Header","style","padding","lineHeight","fontSize","fontWeight","color","textTransform","textAlign","Navbar","useState","navbarOpen","setNavbarOpen","className","onClick","prev","width","height","id","path","text","map","link","to","activeClassName","exact","InputTodo","props","title","inputText","setInputText","onSubmit","e","preventDefault","trim","addTodoProps","type","name","placeholder","value","onChange","target","size","TodoItem","editing","setEditing","todo","completed","viewMode","editMode","display","styles","item","onDoubleClick","checkbox","checked","handleChangeProps","deleteTodoProps","fontStyle","opacity","textDecoration","textInput","updateTodoItem","onKeyDown","event","key","TodoList","listItems","todoItems","SinglePage","console","log","useParams","slug","aboutContent","description","find","About","useRouteMatch","url","NotMacth","TodoContainer","temp","localStorage","getItem","JSON","parse","getInitialTodos","setTodoItems","useEffect","loadedTodos","arr","newTodo","reduce","maxId","prevState","filter","newTitle","NotMatch","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cd1d931e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"TodoItem_item__1wXHA\",\"checkbox\":\"TodoItem_checkbox__W9fD-\",\"textInput\":\"TodoItem_textInput__2si2I\"};","import React from \"react\";\n\nconst Header = () => {\n  const headerStyle = {\n    padding: \"20px 0\",\n    lineHeight: \"1.5em\",\n  };\n  return (\n    <header style={headerStyle}>\n      <h3\n        style={{\n          fontSize: \"4rem\",\n          fontWeight: \"600\",\n          lineHeight: \"1em\",\n          color: \"#cccc\",\n          textTransform: \"lowercase\",\n          textAlign: \"center\",\n        }}\n      >\n        Todos List\n      </h3>\n    </header>\n  );\n};\n\nexport default Header;\n","import React, { useState } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { MdClose } from \"react-icons/md\";\nimport { FiMenu } from \"react-icons/fi\";\n\nconst Navbar = () => {\n  const links = [\n    { id: 1, path: \"/\", text: \"Home\" },\n    { id: 2, path: \"/about\", text: \"About Us\" },\n  ];\n  const [navbarOpen, setNavbarOpen] = useState(false);\n\n  const handleToggle = () => {\n    setNavbarOpen((prev) => !prev);\n  };\n\n  const closeMenu = () => {\n    setNavbarOpen(false);\n  };\n\n  return (\n    <nav className=\"navBar\">\n      <button onClick={handleToggle}>\n        {navbarOpen ? (\n          <MdClose style={{ color: \"#fff\", width: \"30px\", height: \"30px\" }} />\n        ) : (\n          <FiMenu style={{ color: \"#7b7b7b\", width: \"30px\", height: \"30px\" }} />\n        )}\n      </button>\n      <ul className={`menuNav ${navbarOpen ? \"showMenu\" : \"\"}`}>\n        {links.map((link) => {\n          return (\n            <li key={link.id}>\n              <NavLink\n                to={link.path}\n                activeClassName=\"active-link\"\n                onClick={() => closeMenu()}\n                exact\n              >\n                {link.text}\n              </NavLink>\n            </li>\n          );\n        })}\n      </ul>\n    </nav>\n  );\n};\n\nexport default Navbar;\n","import React, { useState } from \"react\";\nimport { FaPlusCircle } from \"react-icons/fa\";\n\nconst InputTodo = (props) => {\n  const [inputText, setInputText] = useState({\n    title: \"\",\n  });\n\n  const handleInputChange = (e) => {\n    setInputText({\n      ...inputText,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (inputText.title.trim()) {\n      props.addTodoProps(inputText.title);\n      setInputText({\n        title: \"\",\n      });\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className=\"form-container\">\n      <input\n        type=\"text\"\n        name=\"title\"\n        className=\"input-text\"\n        placeholder=\"Enter title\"\n        value={inputText.title}\n        onChange={handleInputChange}\n      />\n      <button className=\"input-submit\">\n        <FaPlusCircle color=\"darkcyan\" size=\"20px\" className=\"submit-icon\" />\n      </button>\n    </form>\n  );\n};\n\nexport default InputTodo;\n","import React, { useState } from \"react\";\nimport { FaTrash } from \"react-icons/fa\";\nimport styles from \"./TodoItem.module.css\";\n\nconst TodoItem = (props) => {\n  const [editing, setEditing] = useState(false);\n\n  const handleEditing = () => {\n    setEditing(true);\n  };\n\n  const handleUpdatedDone = (event) => {\n    if (event.key === \"Enter\") {\n      setEditing(false);\n    }\n  };\n\n  const { completed, id, title } = props.todo;\n\n  const completeStyle = {\n    fontStyle: \"italic\",\n    color: \"#595959\",\n    opacity: 0.4,\n    textDecoration: \"line-through\",\n  };\n\n  let viewMode = {};\n  let editMode = {};\n\n  if (editing) {\n    viewMode.display = \"none\";\n  } else {\n    editMode.display = \"none\";\n  }\n\n  return (\n    <li className={styles.item}>\n      <div onDoubleClick={handleEditing} style={viewMode}>\n        <input\n          type=\"checkbox\"\n          className={styles.checkbox}\n          checked={completed}\n          onChange={() => props.handleChangeProps(id)}\n        />\n        <button onClick={() => props.deleteTodoProps(id)}>\n          <FaTrash style={{ color: \"orangered\", fontSize: \"16px\" }} />\n        </button>\n        <span style={completed ? completeStyle : null}>{title}</span>\n      </div>\n      <input\n        type=\"text\"\n        style={editMode}\n        className={styles.textInput}\n        value={title}\n        onChange={(e) => {\n          props.updateTodoItem(e.target.value, id);\n        }}\n        onKeyDown={handleUpdatedDone}\n      />\n    </li>\n  );\n};\n\nexport default TodoItem;\n","import React from \"react\";\nimport TodoItem from \"./TodoItem\";\n\nconst TodoList = (props) => {\n  const listItems = props.todoItems.map((todo) => (\n    <TodoItem\n      key={todo.id}\n      todo={todo}\n      handleChangeProps={props.handleChangeProps}\n      deleteTodoProps={props.deleteTodoProps}\n      updateTodoItem={props.updateTodoItem}\n    />\n  ));\n\n  return <ul>{listItems}</ul>;\n};\n\nexport default TodoList;\n","import React from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nconst SinglePage = () => {\n  console.log(\"useParams-----------\");\n  console.log(useParams());\n  const aboutData = [\n    {\n      slug: \"about-app\",\n      title: \"About the App\",\n      description:\n        \"In this app, you can add, delete, submit and edit items. To edit items, simply double click on it. Once you are done, press the enter key to resubmit. This app will persist your data in the browser local storage. So whether you reload, close your app or reopened it, you still have access to your to-dos items.\",\n    },\n    {\n      slug: \"about-author\",\n      title: \"About the Author\",\n      description:\n        \"This app was developed by Ibas Majid, a self-taught web developer and a technical writer. He is opened to freelance Gig. So go ahead and connect with ibas on Twitter @ibaslogic.\",\n    },\n  ];\n  const { slug } = useParams();\n  const aboutContent = aboutData.find((item) => item.slug === slug);\n  const { title, description } = aboutContent;\n\n  return (\n    <div className=\"main_container\">\n      <h3>{title}</h3>\n      <p>{description}</p>\n    </div>\n  );\n};\n\nexport default SinglePage;\n","import React from \"react\";\nimport { Link, Route, useRouteMatch } from \"react-router-dom\";\nimport SinglePage from \"./SinglePage\";\n\nconst About = () => {\n  const { url, path } = useRouteMatch();\n  return (\n    <div className=\"about_content\">\n      <ul className=\"about_list\">\n        <li>\n          <Link to={`${url}/about-app`}>About App</Link>\n        </li>\n        <li>\n          <Link to={`${url}/about-author`}>About Author</Link>\n        </li>\n      </ul>\n      <Route path={`${path}/:slug`}>\n        <SinglePage />\n      </Route>\n    </div>\n  );\n};\n\nexport default About;\n","import React from \"react\";\n\nconst NotMacth = () => {\n  return (\n    <div>\n      <h3>No match found for this page!!</h3>\n    </div>\n  );\n};\n\nexport default NotMacth;\n","import React, { useState, useEffect } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Header from \"../functionBased/Header\";\nimport Navbar from \"../functionBased/Navbar\";\nimport InputTodo from \"./InputTodo\";\nimport TodoList from \"./TodoList\";\nimport About from \"../functionBased/pages/About\";\nimport NotMatch from \"../functionBased/pages/NotMatch\";\n\nfunction getInitialTodos() {\n  // getting stored items\n  const temp = localStorage.getItem(\"todoItems\");\n  const savedTodos = JSON.parse(temp);\n  return savedTodos || [];\n}\n\nconst TodoContainer = () => {\n  const [todoItems, setTodoItems] = useState(getInitialTodos());\n\n  useEffect(() => {\n    console.log(\"test run\");\n\n    const temp = localStorage.getItem(\"todoItems\");\n    const loadedTodos = JSON.parse(temp);\n\n    if (loadedTodos) {\n      setTodoItems(loadedTodos);\n    }\n  }, []);\n\n  const maxTodoId = (arr) => {\n    let max = arr.reduce(\n      (maxId, todo) => (maxId > todo.id ? maxId : todo.id),\n      0\n    );\n    return max + 1;\n  };\n\n  const handleChange = (id) => {\n    setTodoItems((prevState) =>\n      prevState.map((todo) => {\n        if (todo.id === id) {\n          return {\n            ...todo,\n            completed: !todo.completed,\n          };\n        }\n        return todo;\n      })\n    );\n  };\n\n  const deleteTodo = (id) => {\n    setTodoItems([\n      ...todoItems.filter((todo) => {\n        return todo.id !== id;\n      }),\n    ]);\n  };\n\n  const addTodoItem = (title) => {\n    const newTodo = {\n      id: maxTodoId(todoItems),\n      title: title,\n      completed: false,\n    };\n    setTodoItems([...todoItems, newTodo]);\n  };\n\n  const updateTodoItem = (newTitle, id) => {\n    setTodoItems(\n      todoItems.map((todo) => {\n        if (todo.id === id) {\n          todo.title = newTitle;\n        }\n        return todo;\n      })\n    );\n  };\n\n  return (\n    <>\n      <Navbar />\n      <Switch>\n        <Route exact path=\"/\">\n          <div className=\"container\">\n            <div className=\"inner\">\n              <Header />\n              <InputTodo addTodoProps={addTodoItem} />\n              <TodoList\n                todoItems={todoItems}\n                handleChangeProps={handleChange}\n                deleteTodoProps={deleteTodo}\n                updateTodoItem={updateTodoItem}\n              />\n            </div>\n          </div>\n        </Route>\n        <Route path=\"/about\">\n          <About />\n        </Route>\n        <Route path=\"*\">\n          <NotMatch />\n        </Route>\n      </Switch>\n    </>\n  );\n};\n\nexport default TodoContainer;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport \"./components/classBased/App.css\";\nimport TodoContainer from \"./components/classBased/TodoContainer\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <TodoContainer />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}